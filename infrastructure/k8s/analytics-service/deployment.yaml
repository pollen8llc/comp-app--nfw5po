apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytics-service
  namespace: community-platform
  labels:
    app: analytics-service
    component: analytics
    part-of: community-platform
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: analytics-service
  template:
    metadata:
      labels:
        app: analytics-service
        component: analytics
        part-of: community-platform
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: analytics-service
        image: analytics-service:latest
        imagePullPolicy: Always
        ports:
        - name: grpc
          containerPort: 5000
          protocol: TCP
        - name: metrics
          containerPort: 5000
          protocol: TCP
        resources:
          requests:
            cpu: "1"
            memory: "2Gi"
          limits:
            cpu: "2"
            memory: "4Gi"
        envFrom:
        - configMapRef:
            name: platform-config
        env:
        - name: TDA_EPSILON
          valueFrom:
            configMapKeyRef:
              name: platform-config
              key: analytics_service.yaml.tda.epsilon
        - name: TDA_MIN_POINTS
          valueFrom:
            configMapKeyRef:
              name: platform-config
              key: analytics_service.yaml.tda.minPoints
        - name: TDA_DIMENSION
          valueFrom:
            configMapKeyRef:
              name: platform-config
              key: analytics_service.yaml.tda.dimension
        - name: TDA_PERSISTENCE
          valueFrom:
            configMapKeyRef:
              name: platform-config
              key: analytics_service.yaml.tda.persistence
        - name: TDA_DISTANCE_METRIC
          valueFrom:
            configMapKeyRef:
              name: platform-config
              key: analytics_service.yaml.tda.distanceMetric
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
      tolerations:
      - key: "analytics"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"